# apps/sealed-secrets/sealed-secrets-backup-cron.yml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sealed-secrets-backup
  namespace: kube-system
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  schedule: "0 1 * * *"         # run daily at 01:00 (was */10 for testing)
  suspend: false
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 600
      template:
        metadata:
          labels:
            job-name: sealed-secrets-backup
        spec:
          serviceAccountName: sealed-secrets-backup
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: alpine:3.20
              command:
                - /bin/sh
                - -c
                - |
                  set -e
                  echo "[*] Installing kubectl..."
                  apk add --no-cache curl bash coreutils
                  # NOTE: use arm64 binary for Pi; change arch if needed
                  KVER=$(wget -qO- https://dl.k8s.io/release/stable.txt)
                  curl -sSL -o /usr/local/bin/kubectl "https://dl.k8s.io/release/${KVER}/bin/linux/arm64/kubectl"
                  chmod +x /usr/local/bin/kubectl

                  echo "[*] Backing up active sealed-secrets key..."
                  KEY="$(kubectl -n kube-system get secret -l sealedsecrets.bitnami.com/sealed-secrets-key=active -o name | head -n1)"
                  if [ -z "$KEY" ]; then
                    echo "No active sealed-secrets key found"; exit 0
                  fi
                  kubectl -n kube-system get "$KEY" -o yaml \
                    > /mnt/backup/${KEY##*/}-$(date +%F-%H%M).yaml
                  echo "[*] Backup complete."
              volumeMounts:
                - name: backup-storage
                  mountPath: /mnt/backup
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: sealed-secrets-backup-pvc
