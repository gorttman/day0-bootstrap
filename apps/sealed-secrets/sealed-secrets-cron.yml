# apps/sealed-secrets/sealed-secrets-backup-cron.yml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sealed-secrets-backup
  namespace: kube-system
spec:
  # Run every 5 minutes for now
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 600
      template:
        spec:
          serviceAccountName: sealed-secrets-backup
          restartPolicy: Never
          containers:
            - name: backup
              image: alpine:3
              command: ["/bin/sh","-c"]
              args:
                - |
                  set -euxo pipefail

                  # === CONFIGURATION ===
                  MAX_BACKUPS=5
                  BACKUP_DIR=/mnt/backup

                  echo "[*] Installing kubectl"
                  apk add --no-cache curl bash coreutils
                  curl -sSL https://dl.k8s.io/release/v1.32.0/bin/linux/arm64/kubectl -o /usr/local/bin/kubectl
                  chmod +x /usr/local/bin/kubectl
                  export PATH=$PATH:/usr/local/bin

                  echo "[*] Checking for sealed-secrets active key"
                  KEY="$(kubectl -n kube-system get secret -l sealedsecrets.bitnami.com/sealed-secrets-key=active -o name | head -n1 || true)"
                  if [ -z "${KEY:-}" ]; then
                    echo "[!] No active sealed-secrets key found"
                    exit 2
                  fi

                  TS="$(date +%F-%H%M)"
                  OUT="${BACKUP_DIR}/${KEY##*/}-${TS}.yaml"

                  echo "[*] Writing backup to $OUT"
                  kubectl -n kube-system get "$KEY" -o yaml > "$OUT"

                  echo "[*] Backup complete, keeping last $MAX_BACKUPS copies"
                  ls -1t ${BACKUP_DIR}/${KEY##*/}-*.yaml | tail -n +$((MAX_BACKUPS+1)) | xargs -r rm -f

                  echo "[*] Current backup files:"
                  ls -lh ${BACKUP_DIR}

                  echo "[*] Done."
              volumeMounts:
                - name: backup-storage
                  mountPath: /mnt/backup
          volumes:
            - name: backup-storage
              hostPath:
                path: /mnt/backup
                type: DirectoryOrCreate
