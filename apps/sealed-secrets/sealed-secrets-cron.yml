apiVersion: batch/v1
kind: Job
metadata:
  name: sealed-secrets-backup-diag
  namespace: kube-system
spec:
  ttlSecondsAfterFinished: 600
  template:
    spec:
      serviceAccountName: sealed-secrets-backup
      restartPolicy: Never
      containers:
        - name: diag
          image: alpine:3
          command: ["/bin/sh","-c"]
          args:
            - |
              set -euxo pipefail
              echo "== Installing kubectl =="
              apk add --no-cache curl bash coreutils
              curl -sSL https://dl.k8s.io/release/v1.32.0/bin/linux/arm64/kubectl -o /usr/local/bin/kubectl
              chmod +x /usr/local/bin/kubectl
              kubectl version --client

              echo "== whoami =="; id
              echo "== node /mnt/backup perms =="; ls -ld /mnt/backup || true
              echo "== can-i get/list secrets? =="; kubectl auth can-i get secrets; kubectl auth can-i list secrets

              KEY="$(kubectl -n kube-system get secret -l sealedsecrets.bitnami.com/sealed-secrets-key=active -o name | head -n1 || true)"
              echo "KEY=${KEY:-<none>}"
              if [ -z "${KEY:-}" ]; then
                echo "NO_ACTIVE_KEY_FOUND"; exit 2
              fi

              TS="$(date +%F-%H%M)"
              OUT="/mnt/backup/${KEY##*/}-${TS}.yaml"
              echo "test @ $TS" > /mnt/backup/.write-test
              kubectl -n kube-system get "$KEY" -o yaml > "$OUT"

              ls -l /mnt/backup
              echo "== DIAG DONE =="
          volumeMounts:
            - name: backup-storage
              mountPath: /mnt/backup
      volumes:
        - name: backup-storage
          hostPath:
            path: /mnt/backup
            type: DirectoryOrCreate
