apiVersion: batch/v1
kind: Job
metadata:
  name: sealed-secrets-backup-bootstrap
  namespace: kube-system
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: Replace=true   # ensures Argo recreates job
spec:
  ttlSecondsAfterFinished: 600   # auto-cleanup after 10 min
  selector:
    matchLabels:
      job-name: sealed-secrets-backup-bootstrap   # required since k8s 1.25+
  template:
    metadata:
      labels:
        job-name: sealed-secrets-backup-bootstrap
    spec:
      serviceAccountName: sealed-secrets-backup
      restartPolicy: OnFailure
      containers:
        - name: backup
          image: alpine:3.20              #  changed to Alpine
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "[*] Installing kubectl..."
              apk add --no-cache curl bash coreutils
              curl -sSL -o /usr/local/bin/kubectl https://dl.k8s.io/release/v1.32.0/bin/linux/arm64/kubectl
              chmod +x /usr/local/bin/kubectl

              echo "[*] Bootstrap sealed-secrets backup..."
              KEY="$(kubectl -n kube-system get secret -l sealedsecrets.bitnami.com/sealed-secrets-key=active -o name | head -n1)"
              if [ -z "$KEY" ]; then
                echo "No active sealed-secrets key found"; exit 0
              fi
              kubectl -n kube-system get "$KEY" -o yaml \
                > /mnt/backup/${KEY##*/}-bootstrap-$(date +%F-%H%M).yaml
              echo "[*] Bootstrap backup complete."
          volumeMounts:
            - name: backup-storage
              mountPath: /mnt/backup
      volumes:
        - name: backup-storage
          hostPath:
            path: /mnt/backup
            type: DirectoryOrCreate
